<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:hc="https://handyorg.github.io/handycontrol">
    <Style x:Key="NavigateToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Margin" Value="10,0" />
        <Setter Property="Foreground" Value="{DynamicResource MainTextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Name="border"
                            Height="94"
                            Background="{StaticResource NavigateBd}">
                        <hc:SimpleStackPanel HorizontalAlignment="Center"
                                             VerticalAlignment="Center"
                                             Orientation="Vertical">
                            <TextBlock Margin="0,0,0,5"
                                       FontFamily="{StaticResource IconFont}"
                                       FontSize="38"
                                       Text="{TemplateBinding Tag}"
                                       TextAlignment="Center" />
                            <TextBlock HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontSize="16"
                                       Text="{TemplateBinding Content}"
                                       TextAlignment="Center" />
                        </hc:SimpleStackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource NavigateBd.MouseOver}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource NavigateBd.Selected}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PopupToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="border"
                            Margin="5"
                            Background="{StaticResource StatusBrush}"
                            BorderBrush="{StaticResource StatusBrush}"
                            BorderThickness="1.5"
                            CornerRadius="5">
                        <hc:SimplePanel Margin="10" VerticalAlignment="Center">
                            <ContentPresenter ContentSource="Content" Visibility="{TemplateBinding IsChecked, Converter={StaticResource Boolean2VisibilityReConverter}}" />
                            <ContentPresenter Content="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=(hc:StatusSwitchElement.CheckedElement), Mode=OneWay}" Visibility="{TemplateBinding IsChecked, Converter={StaticResource Boolean2VisibilityConverter}}" />
                        </hc:SimplePanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource QualifiedBrush.5}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource QualifiedBrush.5}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="LightToolToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="hc:IconElement.Height" Value="50" />
        <Setter Property="hc:StatusSwitchElement.CheckedElement" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="Bg" Background="{TemplateBinding Background}">
                        <hc:SimpleStackPanel Margin="0,10,0,0"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"
                                             Orientation="Vertical">
                            <TextBlock Name="IconText"
                                       Height="{TemplateBinding hc:IconElement.Height}"
                                       Margin="0,0,0,10"
                                       HorizontalAlignment="Center"
                                       FontFamily="../../Assets/Fonts/#iconfont"
                                       FontSize="{TemplateBinding hc:IconElement.Height}"
                                       Foreground="{StaticResource LightUnselectedBrush}"
                                       Text="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=Tag}"
                                       TextAlignment="Center" />
                            <ContentPresenter Name="UnCheckedElement"
                                              HorizontalAlignment="Center"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <ContentPresenter Name="CheckedElement"
                                              HorizontalAlignment="Center"
                                              Content="{TemplateBinding hc:StatusSwitchElement.CheckedElement}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Visibility="Collapsed" />
                        </hc:SimpleStackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bg" Property="Background" Value="{StaticResource 按钮选中背景}" />
                            <Setter TargetName="IconText" Property="Foreground" Value="{StaticResource SelectedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Bg" Property="Background" Value="{StaticResource 按钮选中背景}" />
                            <Setter TargetName="IconText" Property="Foreground" Value="{StaticResource SelectedBrush}" />
                            <Setter TargetName="CheckedElement" Property="Visibility" Value="Visible" />
                            <Setter TargetName="UnCheckedElement" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>